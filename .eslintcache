[{"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\index.js":"1","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\App.js":"3","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\Episode\\Episode.js":"4","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\AboutCharacter\\AboutCharacter.js":"5","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\Popup\\Popup.js":"6","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\store.js":"7","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\actions.js":"8","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\types.js":"9","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\reducers\\rootReducers.js":"10","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\reducers\\reducers.js":"11"},{"size":614,"mtime":1608234761462,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3714,"mtime":1608237223808,"results":"15","hashOfConfig":"13"},{"size":847,"mtime":1608237803083,"results":"16","hashOfConfig":"13"},{"size":448,"mtime":1608229098938,"results":"17","hashOfConfig":"13"},{"size":488,"mtime":1608237733338,"results":"18","hashOfConfig":"13"},{"size":138,"mtime":1608229098991,"results":"19","hashOfConfig":"13"},{"size":308,"mtime":1608234565497,"results":"20","hashOfConfig":"13"},{"size":113,"mtime":1608229098996,"results":"21","hashOfConfig":"13"},{"size":250,"mtime":1608234930760,"results":"22","hashOfConfig":"13"},{"size":782,"mtime":1608237811571,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"x1ihxz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\index.js",[],["52","53"],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\App.js",["54","55","56","57","58"],"import './App.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {EpisodeCard} from \"./Episode/Episode\";\r\nimport {Popup} from \"./Popup/Popup\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {changeCharImg} from \"./redux/actions\";\r\nimport {store} from \"./redux/store\";\r\nimport {changeStatePopup} from \"./redux/actions\";\r\n\r\nfunction App({\r\n                 changeCharImg,\r\n                 charImg,\r\n                 changeStatePopup,\r\n                 popupIsOpen\r\n             }) {\r\n\r\n    const [serial, setSerial] = useState([]);\r\n    const [characters, setCharacters] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://breakingbadapi.com/api/episodes?series=Breaking+Bad\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                    setIsLoaded(true);\r\n                    setSerial(result)\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                });\r\n        fetch(\"https://breakingbadapi.com/api/characters\")\r\n            .then(res => res.json())\r\n            .then((result) => {\r\n                    setIsLoaded(true);\r\n                    setCharacters(result)\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                })\r\n    }, []);\r\n\r\n    const getGroup = (array) => {\r\n        let mapCollection = new Map();\r\n        let objTemp = {};\r\n        let values = array.map((el, idx) => array.filter(elem => +elem.season === +array[idx].season));\r\n        let arrTempEpisode = values.map(e => e.map(el => el));\r\n        let arrTempSeason = values.map(e => e[0].season).forEach((e, i) => mapCollection.set(e, arrTempEpisode[i]))\r\n        return mapCollection;\r\n    };\r\n\r\n    let seasonInformation = getGroup(serial);\r\n\r\n    const func = seasonInformation => {\r\n        const collection = [];\r\n        for (let i = 1; i <= seasonInformation.size; i++) {\r\n            collection.push(seasonInformation.get(String(i)))\r\n        }\r\n        return collection\r\n    };\r\n    const collection = func(seasonInformation);\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            {collection.map((item, id) => <div key={id} className={\"season\"}> Season {item[0].season}\r\n                {item.map((elem, idx) => <EpisodeCard changeCharImg={changeCharImg}\r\n                                                      episodeData={elem}\r\n                                                      characters={characters}\r\n                                                      changeStatePopup={changeStatePopup}\r\n                                                      popupIsOpen={popupIsOpen.popupIsOpen}\r\n                                                      key={idx}/>)}\r\n            </div>)}\r\n\r\n            {popupIsOpen.popupIsOpen ?\r\n                <Popup\r\n                    text='Закрыть'\r\n                    src={charImg.charImg}\r\n                    closePopup={changeStatePopup}\r\n                >\r\n                </Popup>\r\n                : null\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        charImg: state.charImg,\r\n        popupIsOpen: state.popupIsOpen\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeCharImg: bindActionCreators(changeCharImg, dispatch),\r\n        changeStatePopup: bindActionCreators(changeStatePopup, dispatch)\r\n    }\r\n};\r\n\r\n\r\nconst ConnectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default ConnectedApp;","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\Episode\\Episode.js",["59"],"import React from 'react';\r\n\r\n\r\nexport const EpisodeCard = ({episodeData, characters, changeCharImg, popupIsOpen, changeStatePopup}) => {\r\n\r\n\r\n\r\n    const getSrcName = (clickedName) => {\r\n      let result = characters.find(obj => (obj.name === clickedName));\r\n      let srcImg = result.img;\r\n      changeCharImg(srcImg);\r\n      changeStatePopup();\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className={\"episodeCard\"}>\r\n            <div className={\"episode-number\"}>\r\n                {episodeData.episode}\r\n            </div>\r\n            <div className={\"episodeTitle\"}>\r\n                {episodeData.title}\r\n            </div>\r\n            <div className={\"episodeCharacters\"}>\r\n                {episodeData.characters.map((item, id) => <a onClick={() => getSrcName(item)}>{item}</a>)}\r\n            </div>\r\n\r\n        </div>\r\n            );\r\n\r\n};\r\n","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\AboutCharacter\\AboutCharacter.js",["60","61"],"import React from 'react';\r\nimport style from './style.css'\r\n\r\n\r\nexport const AboutCharacter = ({character, src}) => {\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n                <div className='popup_inner'>\r\n                    <img className={\"image\"} src={src}>{character.img} </img>\r\n                    {/*<button onClick={this.props.closePopup}>Закрыть</button>*/}\r\n            </div>\r\n\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n\r\n\r\n};",["62","63"],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\Popup\\Popup.js",["64","65"],"import React from 'react';\r\nimport style from './style.css'\r\n\r\n\r\nexport const Popup = ({closePopup, src}) => {\r\n    console.log(closePopup);\r\n    return(\r\n        <React.Fragment>\r\n            <div className='popup'>\r\n                <div className='popup_inner'>\r\n                    <img className={\"img\"} src={src} />\r\n                    <button onClick={closePopup}>Закрыть</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </React.Fragment>\r\n\r\n    )\r\n\r\n\r\n\r\n};","C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\store.js",[],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\actions.js",[],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\types.js",[],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\reducers\\rootReducers.js",[],"C:\\Users\\User\\WebstormProjects\\FinTech\\my-app\\src\\redux\\reducers\\reducers.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":8,"column":9,"nodeType":"72","messageId":"73","endLine":8,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":20,"column":12,"nodeType":"72","messageId":"73","endLine":20,"endColumn":20},{"ruleId":"70","severity":1,"message":"75","line":21,"column":12,"nodeType":"72","messageId":"73","endLine":21,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":48,"column":13,"nodeType":"72","messageId":"73","endLine":48,"endColumn":20},{"ruleId":"70","severity":1,"message":"77","line":51,"column":13,"nodeType":"72","messageId":"73","endLine":51,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":26,"column":59,"nodeType":"80","endLine":26,"endColumn":95},{"ruleId":"70","severity":1,"message":"81","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":15,"column":21,"nodeType":"80","endLine":15,"endColumn":56},{"ruleId":"66","replacedBy":"84"},{"ruleId":"68","replacedBy":"85"},{"ruleId":"70","severity":1,"message":"81","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":11,"column":21,"nodeType":"80","endLine":11,"endColumn":56},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","'isLoaded' is assigned a value but never used.","'error' is assigned a value but never used.","'objTemp' is assigned a value but never used.","'arrTempSeason' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'style' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["86"],["87"],"no-global-assign","no-unsafe-negation"]